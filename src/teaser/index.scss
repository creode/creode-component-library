@use '../globals.scss';

/// @param number $space-vertical - The standard vertical spacing of elements. Ususally supplied in rem or em units.
/// @param number $internal-vertical-space-proportion - A non-unit-specific number representing the proportion of standard vertical spacing to be used between internal elements. 0 represents no spaceing, 1 represtents standard vertical spacing and 2 respesents double vertical spacing. Any decimal number is allowed.
/// @param number $space-horizontal - The standard vertical horizontal of elements. Usually supplied in pixels.
/// @param number $image-aspect-ratio - A non-unit-specific number representing the aspect ratio of the image. 0.5 would result in an image half as tall as is wide, 1 would result in a square image.
/// @param colour $background-color - The colour of the background.
@mixin configure(
	$space-vertical: null,
	$internal-vertical-space-proportion: null,
	$space-horizontal: null,
	$image-aspect-ratio: null,
	$background-color: null
) {

	@if $space-vertical {
		$space-vertical: $space-vertical !global;
	} @else {
		$space-vertical: globals.$space-vertical !global;
	}

	@if $internal-vertical-space-proportion {
		$internal-vertical-space-proportion: $internal-vertical-space-proportion !global;
	} @else {
		$internal-vertical-space-proportion: 0.5 !global;
	}

	@if $space-horizontal {
		$space-horizontal: $space-horizontal !global;
	} @else {
		$space-horizontal: globals.$space-horizontal !global;
	}

	@if $image-aspect-ratio {
		$image-aspect-ratio: $image-aspect-ratio !global;
	} @else {
		$image-aspect-ratio: 0.75 !global;
	}

	@if $background-color {
		$background-color: $background-color !global;
	} @else {
		$background-color: grey !global;
	}

}

@mixin render() {

	.teaser__wrapper {
		background-color: $background-color;
	}

	.teaser__image-wrapper {
		position: relative;
		padding-bottom: $image-aspect-ratio * 100%;

		img {
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
	}

	.teaser__content {
		padding: $space-vertical $space-horizontal ($space-vertical - ($space-vertical * $internal-vertical-space-proportion));
		background-color: $background-color;
	}

	.teaser__heading,
	.teaser__text {
		margin: 0;
		padding: 0 0 ($space-vertical * $internal-vertical-space-proportion);
	}

}
